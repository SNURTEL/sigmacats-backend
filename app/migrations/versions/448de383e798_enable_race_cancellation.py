"""enable_race_cancellation

Revision ID: 448de383e798
Revises: e78fd565fc94
Create Date: 2023-12-02 16:53:56.976064

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '448de383e798'
down_revision: Union[str, None] = 'e78fd565fc94'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('race', 'description',
                    existing_type=sa.VARCHAR(length=512),
                    type_=sqlmodel.sql.sqltypes.AutoString(length=2048),
                    existing_nullable=False)
    op.alter_column('race', 'status',
                    type_=sa.Enum('rending', 'in_progress', 'ended', 'cancelled', name='racestatus')
                    )
    op.add_column("race", sa.Column("no_laps", sa.Integer(), nullable=False))
    op.create_check_constraint("race_no_laps_positive", "race", "no_laps > 0")
    op.drop_constraint("race_status_enum", "race")
    op.create_check_constraint("race_status_enum", "race", "status in ('pending', 'in_progress', 'ended', 'cancelled')")
    op.drop_constraint("race_participation_gpx_requires_timestamp", "raceparticipation")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('race', 'description',
                    existing_type=sqlmodel.sql.sqltypes.AutoString(length=2048),
                    type_=sa.VARCHAR(length=512),
                    existing_nullable=False)
    op.drop_constraint("race_status_enum", "race")
    op.drop_constraint("race_no_laps_positive", "race")
    op.drop_column("race", "no_laps")
    op.create_check_constraint("race_status_enum", "race", "status in ('pending', 'in_progress', 'ended')",
                               name="race_status_enum")
    op.create_check_constraint("race_participation_gpx_requires_timestamp", "raceparticipation", "ride_end_timestamp IS NOT NULL")

    # ### end Alembic commands ###
