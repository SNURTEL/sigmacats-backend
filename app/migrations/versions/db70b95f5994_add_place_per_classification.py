"""add_place_per_classification

Revision ID: db70b95f5994
Revises: 448de383e798
Create Date: 2023-12-09 15:49:58.835297

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'db70b95f5994'
down_revision: Union[str, None] = '448de383e798'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('riderparticipationclassificationplace',
    sa.Column('place', sa.Integer(), nullable=False),
    sa.Column('race_participation_id', sa.Integer(), nullable=False),
    sa.Column('clasification_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clasification_id'], ['classification.id'], ),
    sa.ForeignKeyConstraint(['race_participation_id'], ['raceparticipation.id'], ),
    sa.PrimaryKeyConstraint('race_participation_id', 'clasification_id'),
    sa.CheckConstraint("place > 0", name="rider_participation_classification_place_place_positive")
    )
    op.drop_table('accesslimiterclassificationlink')
    op.drop_table('classificationaccesslimiter')
    op.add_column('raceparticipation', sa.Column('place_generated_overall', sa.Integer(), nullable=True))
    op.add_column('raceparticipation', sa.Column('place_assigned_overall', sa.Integer(), nullable=True))
    op.drop_constraint('race_participation_place_generated_positive', 'raceparticipation')
    op.drop_constraint('race_participation_place_assigned_positive', 'raceparticipation')
    op.create_check_constraint("race_participation_place_generated_positive", "raceparticipation", "place_generated_overall > 0")
    op.create_check_constraint("race_participation_place_assigned_positive", "raceparticipation", "place_generated_overall > 0")
    op.drop_column('raceparticipation', 'place_assigned')
    op.drop_column('raceparticipation', 'place_generated')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('raceparticipation', sa.Column('place_generated', sa.INTEGER(), nullable=True))
    op.add_column('raceparticipation', sa.Column('place_assigned', sa.INTEGER(), nullable=True))
    op.drop_constraint('race_participation_place_generated_positive', 'raceparticipation')
    op.drop_constraint('race_participation_place_assigned_positive', 'raceparticipation')
    op.create_check_constraint("race_participation_place_generated_positive", "raceparticipation", "place_generated > 0")
    op.create_check_constraint("race_participation_place_assigned_positive", "raceparticipation", "place_generated > 0")
    op.drop_column('raceparticipation', 'place_assigned_overall')
    op.drop_column('raceparticipation', 'place_generated_overall')
    op.create_table('classificationaccesslimiter',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('"USER1"."CLASSIFICATIONACCESSLIMITER_SEQ"."NEXTVAL"'), nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), nullable=False),
    sa.Column('rule', sa.VARCHAR(length=512), nullable=False),
    sa.PrimaryKeyConstraint('id', name='sys_c008358'),
    oracle_resolve_synonyms=False
    )
    op.create_table('accesslimiterclassificationlink',
    sa.Column('access_limiter_id', sa.INTEGER(), nullable=False),
    sa.Column('classification_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['access_limiter_id'], ['classificationaccesslimiter.id'], name='sys_c008407'),
    sa.ForeignKeyConstraint(['classification_id'], ['classification.id'], name='sys_c008408'),
    sa.PrimaryKeyConstraint('access_limiter_id', 'classification_id', name='sys_c008406')
    )
    op.drop_table('riderparticipationclassificationplace')
    # ### end Alembic commands ###
